#!/usr/bin/env python3
from Crypto.Cipher import AES
import base64, zlib, sys

# ---- INTERNAL KEY ----
KEY = b'A\x1fSd),\xb7\xd39#\x87\xde\x81\xfc\x11W\xf0\x8a\xe7\x1ai\x87\xd0L\xb6\xdc\xf46x_O\xcf'

# ---- ENCRYPTED DATA ----
ENCRYPTED = ""

def decrypt():
    try:
        data = base64.b64decode(ENCRYPTED)
        nonce, tag, ciphertext = data[:16], data[16:32], data[32:]
        cipher = AES.new(KEY, AES.MODE_EAX, nonce)
        decompressed = zlib.decompress(cipher.decrypt_and_verify(ciphertext, tag))
        return decompressed.decode()
    except Exception as e:
        print("⛔ Error: Failed to decrypt script!")
        sys.exit(1)

# Execute original code
exec(decrypt())
